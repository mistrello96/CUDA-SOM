require("kohonen")
require("cluster")
require("factoextra")
require("NbClust")
optimal_som <- function(data) {
return (sqrt(5*nrow(data)^0.54321));
}
get_best_k <- function(seqdata) {
a <- get_best_k_gapstat(seqdata);
b <- get_best_k_silhouette(seqdata);
print(a);
print(b);
#  return( (a+b)/2 );
return (b); # more sbracativ
}
get_best_k_gapstat <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "gap_stat",hc_method = "complete");
for (i in 1:9) {
if (ret$data$gap[i]>ret$data$gap[i+1])  {
return(i);
}
}
return(10);
}
get_best_k_silhouette <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "silhouette",hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
get_best_k_wss <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "wss", hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
input_file = "dati_bicocca_leucemia.txt" # dati raw
setwd("~/Projects/Tesi/EsamplesData")
input_file = "dati_bicocca_leucemia.txt" # dati raw
input_file = "dati_bicocca_melanoma.txt" # dati raw
input_file = "dati_bicocca_leucemia.txt" # dati raw
test_name = "Leukemia"
seqdata_original <- read.csv(input_file, sep="\t", dec=".", header=FALSE)
seqdata <- as.matrix(scale(seqdata_original))
D <- optimal_som(seqdata);
debug(supersom)
som_model <- supersom(seqdata, rlen=1000 , radius=5, alpha=c(0.1, 0.001), grid=somgrid(D,D,"rectangular",toroidal = F), normalizeDataLayers = FALSE ,keep.data=T, dist.fcts="euclidean")
View(seqdata_original)
plot(som_model, type="dist.neighbours")
plot(som_model, type="changes")
require("kohonen")
require("cluster")
require("factoextra")
require("NbClust")
optimal_som <- function(data) {
return (sqrt(5*nrow(data)^0.54321));
}
get_best_k <- function(seqdata) {
a <- get_best_k_gapstat(seqdata);
b <- get_best_k_silhouette(seqdata);
print(a);
print(b);
#  return( (a+b)/2 );
return (b); # more sbracativ
}
get_best_k_gapstat <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "gap_stat",hc_method = "complete");
for (i in 1:9) {
if (ret$data$gap[i]>ret$data$gap[i+1])  {
return(i);
}
}
return(10);
}
get_best_k_silhouette <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "silhouette",hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
get_best_k_wss <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "wss", hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
input_file = "dati_bicocca_leucemia.txt" # dati raw
input_file = "dati_bicocca_melanoma.txt" # dati raw
test_name = "Leukemia"
test_name = "Melanoma"
seqdata_original <- read.csv(input_file, sep="\t", dec=".", header=FALSE)
seqdata <- as.matrix(scale(seqdata_original))
D <- optimal_som(seqdata);
debug(supersom)
som_model <- supersom(seqdata, rlen=1000 , radius=5, alpha=c(0.1, 0.001), grid=somgrid(D,D,"rectangular",toroidal = F), normalizeDataLayers = FALSE ,keep.data=T, dist.fcts="euclidean")
View(init.matrix)
View(data.matrix)
View(init.matrix)
View(data.matrix)
View(changes)
View(init.matrix)
View(init.matrix)
View(init.matrix)
View(init.matrix)
utils::View(init.matrix)
utils::View(res.codes)
utils::View(res)
init.matrix == rese
init.matrix == res
init.matrix == res[0]
init.matrix == res[1]
identical(init.matrix, res)
identical(init.matrix, res[0])
identical(init.matrix, res[1])
all(init.matrix == res[0])
all.equal(init.matrix == res[0])
all.equal(init.matrix == res)
all.equal(init.matrix == res[07])
all.equal(init.matrix == res[0])
all.equal(init.matrix, res[0])
all.equal(init.matrix, res)
all.equal(init.matrix, res[1])
som_model <- supersom(seqdata, rlen=1000 , radius=5, alpha=c(0.1, 0.001), grid=somgrid(D,D,"rectangular",toroidal = F), normalizeDataLayers = FALSE ,keep.data=T, dist.fcts="euclidean")
D <- optimal_som(seqdata);
debug(supersom)
som_model <- supersom(seqdata, rlen=1000 , radius=5, alpha=c(0.1, 0.001), grid=somgrid(D,D,"rectangular",toroidal = F), normalizeDataLayers = FALSE ,keep.data=T, dist.fcts="euclidean")
plot(som_model, type="changes")
require("kohonen")
require("cluster")
require("factoextra")
require("NbClust")
optimal_som <- function(data) {
return (sqrt(5*nrow(data)^0.54321));
}
get_best_k <- function(seqdata) {
a <- get_best_k_gapstat(seqdata);
b <- get_best_k_silhouette(seqdata);
print(a);
print(b);
#  return( (a+b)/2 );
return (b); # more sbracativ
}
get_best_k_gapstat <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "gap_stat",hc_method = "complete");
for (i in 1:9) {
if (ret$data$gap[i]>ret$data$gap[i+1])  {
return(i);
}
}
return(10);
}
get_best_k_silhouette <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "silhouette",hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
get_best_k_wss <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "wss", hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
input_file = "dati_bicocca_leucemia.txt" # dati raw
input_file = "dati_bicocca_melanoma.txt" # dati raw
test_name = "Leukemia"
test_name = "Melanoma"
seqdata_original <- read.csv(input_file, sep="\t", dec=".", header=FALSE)
seqdata <- as.matrix(scale(seqdata_original))
D <- optimal_som(seqdata);
debug(supersom)
som_model <- supersom(seqdata, rlen=1000 , radius=5, alpha=c(0.1, 0.001), grid=somgrid(D,D,"rectangular",toroidal = F), normalizeDataLayers = FALSE ,keep.data=T, dist.fcts="euclidean")
View(init.matrix)
util.view(init.matrix)
util.View(init.matrix)
utils:View(init.matrix)
View(init.matrix)
utils:View(init.matrix)
util:View(init.matrix)
utils::View(init.matrix)
View(nNA)
utils::View(nhbrdist[0])
utils::View(nhbrdist[1])
utils::View(nhbrdist[2])
View(data.matrix)
View(nvar)
View(data.matrix)
View(nvar)
require("kohonen")
require("cluster")
require("factoextra")
require("NbClust")
optimal_som <- function(data) {
return (sqrt(5*nrow(data)^0.54321));
}
get_best_k <- function(seqdata) {
a <- get_best_k_gapstat(seqdata);
b <- get_best_k_silhouette(seqdata);
print(a);
print(b);
#  return( (a+b)/2 );
return (b); # more sbracativ
}
get_best_k_gapstat <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "gap_stat",hc_method = "complete");
for (i in 1:9) {
if (ret$data$gap[i]>ret$data$gap[i+1])  {
return(i);
}
}
return(10);
}
get_best_k_silhouette <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "silhouette",hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
get_best_k_wss <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "wss", hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
input_file = "dati_bicocca_leucemia.txt" # dati raw
test_name = "Leukemia"
seqdata_original <- read.csv(input_file, sep="\t", dec=".", header=FALSE)
seqdata <- as.matrix(scale(seqdata_original))
D <- optimal_som(seqdata);
debug(supersom)
som_model <- supersom(seqdata, rlen=1000 , radius=5, alpha=c(0.1, 0.001), grid=somgrid(D,D,"rectangular",toroidal = F), normalizeDataLayers = FALSE ,keep.data=T, dist.fcts="euclidean")
coolBlueHotRed <- function(n, alpha = 1) {rainbow(n, end=4/6, alpha=alpha)[n:1]}
plot(som_model, type="dist.neighbours",  shape="straight", main=paste("Neighbours distances - ", test_name), palette.name = coolBlueHotRed)
plot(som_model, type="changes")
plot(som_model, type="changes")
