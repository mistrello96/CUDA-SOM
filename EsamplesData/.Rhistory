setwd("~/Projects/Tesi/EsamplesData")
require("kohonen")
require("cluster")
require("factoextra")
require("NbClust")
optimal_som <- function(data) {
return (sqrt(5*nrow(data)^0.54321));
}
get_best_k <- function(seqdata) {
a <- get_best_k_gapstat(seqdata);
b <- get_best_k_silhouette(seqdata);
print(a);
print(b);
#  return( (a+b)/2 );
return (b); # more sbracativ
}
get_best_k_gapstat <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "gap_stat",hc_method = "complete");
for (i in 1:9) {
if (ret$data$gap[i]>ret$data$gap[i+1])  {
return(i);
}
}
return(10);
}
get_best_k_silhouette <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "silhouette",hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
get_best_k_wss <- function(seqdata) {
ret <- fviz_nbclust(seqdata, hcut, method = "wss", hc_method = "ward.D2");
return (which(ret$data$y==max(ret$data$y)));
}
input_file = "bigData.txt" # dati raw
test_name = "Leukemia"
test_name = "Melanoma"
seqdata_original <- read.csv(input_file, sep="\t", dec=".", header=FALSE)
seqdata <- as.matrix(seqdata_original)
D <- optimal_som(seqdata);
system.time(som_model <- supersom(radius=25, seqdata, rlen=5, alpha=c(0.1, 0.001), grid=somgrid(D,D,"rectangular",toroidal = F),keep.data=T, dist.fcts="euclidean", cores = 1))
plot(som_model, type="changes")
