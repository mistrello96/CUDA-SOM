version "0.5"
package "CudaSOM"
purpose "Cuda implementation of Self Organizing Map"

# Options

option "inputfile" i "PATH to the input file" string optional default="./"
option "nRows" x "allows to provide the number of rows in the neuron's matrix" int optional default="0"
option "nColumns" y "allows to provide the number of columns in the neuron's matrix" int optional default="0"
option "initial_learning_rate" s "allows to provide initial learning rate" double optional default = "-1"
option "final_learning_rate" f "allows to provide final learning rate" double optional default="0"
option "iteration" n "number of times the dataset is presented to the SOM" int optional default = "-1"
option "debug" d "enables advanced debug prints" flag off
option "verbose" v "enables debug print" flag off
option "savedistances" - "save the distances between reads and final SOM in a file" flag off
option "saveall" - "save the input and output SOM in files, save the distances between reads and final SOM in a file" flag off
option "radius" r "allows to chose the initial radius of the updating function" int optional default= "0"
option "distance" - "allows to chose different types of distance function. Use e for euclidean, s for sum of sqares, m for manhattan or t for tanimoto" string optional default="e" values="e","s","m","t"
option "normalize" - "Enable the normalization of the distance function" flag off
option "neighbors" - "allows to specify the neighbors function used in the learning process. Use g for gaussian, b for bubble or m for mexican hat" string optional default="g" values="b","g","m"
option "initialization" - "allows to specify how initial weights are initialized. Use r for random initialization or c for random vector from the input file" string optional default="c" values="r","c"
option "lattice" - "allows to choose what tipy of lattice is used. Use s for square lattice or e for exagonal lattice" string optional default="e" values="s","e"
option "randomize" - "enables the randomization of the dataset. Before presentig the dataset to the SOM, all entrys are shuffled." flag on
option "exponential" - "enables the exponential decay of the learning rate and the radius. Use l for learning rate, r for radius or b for both" string optional default="n" values="n","l","r","b"
option "normalizedistance" - "enables the normalized mean distance of the iteration" flag off
option "benchmark" b "Run a benchmark to find out the minimum dimension of the input file to make GPU computation advantageous" flag off